---
- name: Install sshd config
  template:
    src: "sshd_config.j2"
    dest: "/etc/ssh/sshd_config.tmp"
    owner: root
    group: root
    mode: 0600

- name: Check if sshd_config is valid
  command: /usr/sbin/sshd -T -f /etc/ssh/sshd_config.tmp
  ignore_errors: yes
  register: sshd_config

- name: Fix sshd_config UsePrivilegeSeparation parameter
  lineinfile:
    dest: "/etc/ssh/sshd_config.tmp"
    state: present
    regexp: '.*UsePrivilegeSeparation.*'
    line: "UsePrivilegeSeparation yes"
    validate: "/usr/sbin/sshd -T -f %s"
  when: sshd_config.rc != 0

- name: Check if sshd_config is valid
  command: /usr/sbin/sshd -T -f /etc/ssh/sshd_config.tmp

- name: Copy sshd_config file back
  shell: cp -f "/etc/ssh/sshd_config.tmp" "/etc/ssh/sshd_config"
  notify:
    - restart sshd

- name: Check if selinux is used
  command: getenforce
  register: selinux_enforce
  when: ansible_distribution != "Debian" and ansible_distribution != "Ubuntu"

- name: Add ssh port to seport if selinux is enabled
  command: "semanage port -a -t ssh_port_t -p tcp {{ sshd_port }}"
  when: selinux_enforce is defined and ('isabled' not in selinux_enforce.stdout and 'ermissive' not in selinux_enforce.stdout)

- name: Add sshd_port to firewalld
  shell: firewall-cmd --permanent --zone="$(firewall-cmd --get-default-zone)" --add-port={{ sshd_port }}/tcp
  ignore_errors: true
  notify: reload firewalld
  when: has_firewalld
